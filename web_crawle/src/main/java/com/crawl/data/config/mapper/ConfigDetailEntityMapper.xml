<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crawl.data.config.dao.ConfigDetailEntityMapper">
  <resultMap id="BaseResultMap" type="com.crawl.data.config.dao.entity.ConfigDetailEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="createid" jdbcType="INTEGER" property="createid" />
    <result column="ts" jdbcType="TIMESTAMP" property="ts" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pid, key, value, desc, type, createid, ts
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from config_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from config_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crawl.data.config.dao.entity.ConfigDetailEntity">
    insert into config_detail (id, pid, key, 
      value, desc, type, 
      createid, ts)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{createid,jdbcType=INTEGER}, #{ts,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.crawl.data.config.dao.entity.ConfigDetailEntity">
    insert into config_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="key != null">
        key,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createid != null">
        createid,
      </if>
      <if test="ts != null">
        ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        #{createid,jdbcType=INTEGER},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crawl.data.config.dao.entity.ConfigDetailEntity">
    update config_detail
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        key = #{key,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        createid = #{createid,jdbcType=INTEGER},
      </if>
      <if test="ts != null">
        ts = now()
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and ts=#{ts}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crawl.data.config.dao.entity.ConfigDetailEntity">
    update config_detail
    set pid = #{pid,jdbcType=INTEGER},
      key = #{key,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      createid = #{createid,jdbcType=INTEGER},
     ts = now()
    where id = #{id,jdbcType=INTEGER} and ts=#{ts}
  </update>
</mapper>